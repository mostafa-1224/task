{"version":3,"sources":["images/pic1.jpg","images/pic2.jpg","NavBar/Nav.js","Single/Single.js","SectionHero/Hero.js","FeaturedPosts/Featured.js","PostDetails/Post.js","EmptyComponent/Empty.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","to","style","textDecoration","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","p","Single","props","parag","color","Hero","useState","facts","setFacts","useEffect","axios","get","then","res","factsHandler","data","list","title","Posts","alt","src","PIC1","PIC2","Post","details","setDetails","match","params","detailsHandler","console","log","channel","Empty","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.315bf4e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.3ead947b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic2.1b38e686.jpg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Nav.css';\r\n\r\n \r\nfunction Nav() {\r\n\r\n\r\n  return ( \r\n    <div className=''>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light \">\r\n        <Link to='/task' style={{textDecoration:'none'}} ><p className=\"navbar-brand\" >BLOGINIK</p></Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n \r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item active\">\r\n              <Link to='/task' style={{textDecoration:'none'}} ><p className=\"nav-link\" >Home</p></Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/task/empty' style={{textDecoration:'none'}} ><p className=\"nav-link\" >About</p></Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/task/empty' style={{textDecoration:'none'}} ><p className=\"nav-link\" >Category</p></Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/task/empty' style={{textDecoration:'none'}} ><p className=\"nav-link\" >Pages</p></Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/task/empty' style={{textDecoration:'none'}} ><p className=\"nav-link\" >Layout</p></Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to='/task/empty' style={{textDecoration:'none'}} ><p className=\"nav-link\"p>Contact</p></Link>\r\n            </li>\r\n\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './SingleHero.css';\r\n\r\n\r\nfunction Single(props) {\r\n\r\n    return (\r\n\r\n        <div className='hero'>\r\n            \r\n            <p className='text'>{props.parag}</p>\r\n\r\n            <Link to={'/task/postdetails/' + props.id}\r\n                style={{ textDecoration: 'none', color: 'black' }}>\r\n                <p className='text2'>show details about this post</p>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Single;\r\n","import React, {useEffect, useState } from 'react';\r\nimport Single from '../Single/Single';\r\nimport axios from 'axios';\r\nimport './Hero.css';\r\n\r\nfunction Hero (){\r\n \r\n  \r\n  const [facts, setFacts] = useState({ facts: '' });\r\n  useEffect( () =>{\r\n  axios.get( 'https://api.dailymotion.com/videos').then(\r\n  res =>{\r\n    factsHandler(res.data);\r\n    return ;\r\n  })}, [])\r\n\r\n  const factsHandler = (data) => {\r\n    setFacts({facts: data });\r\n  }\r\n\r\n  return (\r\n      <div className='hero-container row'>\r\n        <div className='main col-12'>\r\n        {\r\n          facts.facts === ''? \r\n          <Single parag = 'Loading ...' /> :\r\n          <Single parag = {facts.facts?.list[0].title} id = {facts.facts?.list[0].id} />\r\n        }\r\n        </div>\r\n\r\n        <div className='left col'>\r\n        {\r\n          facts.facts === ''? \r\n          <Single parag = 'Loading ...' /> :\r\n          <Single parag = {facts.facts?.list[1].title} id = {facts.facts?.list[1].id} />\r\n        }\r\n        </div>\r\n        <div className='middle col-md-5'>\r\n        {\r\n          facts.facts === ''? \r\n          <Single parag = 'Loading ...' /> :\r\n          <Single parag = {facts.facts?.list[2].title} id = {facts.facts?.list[2].id} />\r\n        }\r\n        </div>\r\n        <div className='right col'>\r\n        {\r\n          facts.facts === ''? \r\n          <Single parag = 'Loading ...' /> :\r\n          <Single parag = {facts.facts?.list[3].title} id = {facts.facts?.list[3].id} />\r\n        }\r\n        </div>\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport PIC1 from '../images/pic1.jpg'\r\nimport PIC2 from '../images/pic2.jpg'\r\nimport './Featured.css';\r\n\r\n\r\nfunction Posts() {\r\n \r\n \r\nreturn (\r\n\r\n    <div className='featured row'>\r\n        <h1 className = 'col-12'>Featured Posts</h1>\r\n        <div className='feat-item col-7'>\r\n            <img alt ='img'src={PIC1} className='col-12' /> \r\n            <p className=' col'>SERP 15, - FEATURED, LIFESTYLE, UPCOMING</p>\r\n            <h3 className='col'>He comment of coast towards view designer and to what .</h3>\r\n        </div>\r\n\r\n        <div className='feat-item col-4'>\r\n            <img alt ='img' src={PIC2} className='col-12' />\r\n            <p className=' col'>SERP 15, - FEATURED, LIFfffESTYLE, UPCOMING</p>\r\n            <h3 className='col'>meet has two ought semantics.</h3>\r\n        </div>\r\n        \r\n    </div>\r\n)\r\n}\r\n\r\nexport default Posts;\r\n","import React, {useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Post.css';\r\n\r\n\r\nfunction Post(props) {\r\n  \r\n  const [details, setDetails] = useState({ details: ''});\r\n  useEffect( () =>{\r\n  axios.get( 'https://api.dailymotion.com/video/'+props.match.params.id).then(\r\n  res =>{\r\n    detailsHandler(res.data);\r\n    return ;\r\n\r\n  })}, [])\r\n  const detailsHandler = (data) => {\r\n    console.log('handler',data);\r\n    setDetails({details: data});\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=''>\r\n        <h1> {details.details.title} </h1>\r\n        <p>Channel ::  {details.details.channel}</p>\r\n        <p>Video ID ::  {details.details.id}</p>\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport './Empty.css';\r\n\r\n\r\nfunction Empty() {\r\n  return (\r\n    <div className='container empty'>\r\n        <h1> Under Developing </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Empty;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Nav from './NavBar/Nav'\nimport Hero from './SectionHero/Hero'\nimport Posts from './FeaturedPosts/Featured'\nimport Post from './PostDetails/Post'\nimport Empty from './EmptyComponent/Empty'\nimport './App.css';\n\n\nfunction App() {\n\n\n\n  return (\n    <div className='App container'>\n      <Router>\n        <Nav />\n        <Route path = '/task' exact component = {Hero} />\n        <Route path = '/task' exact component = {Posts} />\n        <Switch>\n          <Route path = '/task/postdetails/:id' exact component = {Post} />\n          <Route path = '/task/empty' exact component = {Empty} />\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}