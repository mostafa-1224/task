{"version":3,"sources":["images/pic1.jpg","images/pic2.jpg","NavBar/Nav.js","SectionHero/SinglePost.js","SectionHero/Hero.js","FeaturedPosts/Featured.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","href","SinglePost","Hero","Posts","src","PIC1","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,kC,6GCA3CD,EAAOC,QAAU,IAA0B,kC,wHCwB5BC,MApBf,WAGE,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,cAAf,YACA,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,YAAW,uBAAGC,KAAK,KAAR,SAC1B,yBAAKD,UAAU,YAAW,uBAAGC,KAAK,KAAR,UAC1B,yBAAKD,UAAU,YAAW,uBAAGC,KAAK,KAAR,UAC1B,yBAAKD,UAAU,YAAW,uBAAGC,KAAK,KAAR,aAC1B,yBAAKD,UAAU,YAAW,uBAAGC,KAAK,KAAR,WAC1B,yBAAKD,UAAU,YAAW,uBAAGC,KAAK,KAAR,gB,KCErBC,MAff,WAGE,OAGI,yBAAKF,UAAU,OACb,yBAAKA,UAAU,YACX,uBAAGA,UAAU,YAAb,4CACA,wBAAIA,UAAU,SAAd,8DCaGG,MArBf,WAIE,OACE,yBAAKH,UAAU,kBAGb,kBAAC,EAAD,CAAYA,UAAU,WAEtB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BAA4B,kBAAC,EAAD,OAC3C,yBAAKA,UAAU,6BAA4B,kBAAC,EAAD,OAC3C,yBAAKA,UAAU,6BAA4B,kBAAC,EAAD,U,4BCapCI,MAzBf,WAGI,OACI,yBAAKJ,UAAU,mBACX,8CAEA,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,mBACX,yBAAKK,IAAKC,IAAMN,UAAU,WAC1B,uBAAGA,UAAU,QAAb,4CACA,wBAAIA,UAAU,OAAd,4DAGJ,yBAAKA,UAAU,mBACX,yBAAKK,IAAKC,IAAMN,UAAU,WAC1B,uBAAGA,UAAU,QAAb,+CACA,wBAAIA,UAAU,OAAd,qC,MCHLO,MAbf,WAIE,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCHcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.b81b198e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pic1.3ead947b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic2.1b38e686.jpg\";","import React from 'react';\r\nimport './Nav.css';\r\n\r\n\r\nfunction Nav() {\r\n\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className=\"row\">\r\n        <div className=\"logo col-5\">BLOGINIK</div>\r\n        <div className='links row col-7'>\r\n          <div className=\"link col\"><a href='#'>Home</a></div>\r\n          <div className=\"link col\"><a href='#'>About</a></div>\r\n          <div className=\"link col\"><a href='#'>Pages</a></div>\r\n          <div className=\"link col\"><a href='#'>Category</a></div>\r\n          <div className=\"link col\"><a href='#'>Layout</a></div>\r\n          <div className=\"link col\"><a href='#'>Contact</a></div>\r\n        </div>  \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport './Hero.css';\r\n\r\n\r\nfunction SinglePost() {\r\n\r\n\r\n  return (\r\n\r\n        \r\n      <div className='row'>\r\n        <div className='main col'>\r\n            <p className='text col'>SERP 15, - FEATURED, LIFESTYLE, UPCOMING</p>\r\n            <h1 className='col-8'>He comment of coast towards view designer and to what .</h1>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default SinglePost;\r\n","import React from 'react';\r\nimport  SinglePost from './SinglePost'\r\nimport './Hero.css';\r\n\r\n\r\nfunction Hero() {\r\n\r\n  \r\n\r\n  return (\r\n    <div className='hero container'>\r\n\r\n        \r\n      <SinglePost className='col-12'/>\r\n\r\n      <div className='row group'>\r\n        <div className='single col-md-3 col-xs-12'><SinglePost /></div>\r\n        <div className='single col-md-5 col-xs-12'><SinglePost /></div>\r\n        <div className='single col-md-3 col-xs-12'><SinglePost /></div>\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Hero;\r\n","import React from 'react';\r\nimport PIC1 from '../images/pic1.jpg'\r\nimport PIC2 from '../images/pic2.jpg'\r\nimport './Featured.css';\r\n\r\n\r\nfunction Posts() {\r\n\r\n\r\n    return (\r\n        <div className='posts container'>\r\n            <h1>Featured Posts</h1>\r\n\r\n            <div className='featured row'>\r\n                <div className='feat-item col-7'>\r\n                    <img src={PIC1} className='col-12' /> \r\n                    <p className=' col'>SERP 15, - FEATURED, LIFESTYLE, UPCOMING</p>\r\n                    <h3 className='col'>He comment of coast towards view designer and to what .</h3>\r\n                </div>\r\n\r\n                <div className='feat-item col-4'>\r\n                    <img src={PIC1} className='col-12' />\r\n                    <p className=' col'>SERP 15, - FEATURED, LIFfffESTYLE, UPCOMING</p>\r\n                    <h3 className='col'>meet has two ought semantics.</h3>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Posts;\r\n","import React from 'react';\nimport Nav from './NavBar/Nav'\nimport Hero from './SectionHero/Hero'\nimport Posts from './FeaturedPosts/Featured'\nimport './App.css';\n\n\nfunction App() {\n\n\n\n  return (\n    <div className='App'>\n      <Nav />\n      <Hero />\n      <Posts />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}